name: 'Publish Docker images'
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: 'eu-west-1'

      - name: "Set current date as env variable"
        run: |
          echo "builddate=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
        id: version

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: debian
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-${{ steps.version.outputs.builddate }} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-${{ steps.version.outputs.builddate }}
        working-directory: docker/debian

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ubuntu
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-${{ steps.version.outputs.builddate }} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-${{ steps.version.outputs.builddate }}
        working-directory: docker/ubuntu
